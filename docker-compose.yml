services:
  # Load Balancer (Nginx)
  load-balancer:
    image: nginx:alpine
    ports:
      - "0.0.0.0:80:80"
    command: |
      sh -c "
      echo 'upstream backend {
          server app1:3000;
          server app2:3000;
      }
      server {
          listen 80;
          location / {
              proxy_pass http://backend;
              proxy_set_header Host \$$host;
              proxy_set_header X-Real-IP \$$remote_addr;
              proxy_set_header X-Forwarded-For \$$proxy_add_x_forwarded_for;
              proxy_set_header X-Forwarded-Proto \$$scheme;
          }
          location /health {
              return 200 \"healthy\n\";
              add_header Content-Type text/plain;
          }
      }' > /etc/nginx/conf.d/default.conf &&
      nginx -g 'daemon off;'
      "
    depends_on:
      - app1
      - app2
    networks:
      - exploration-network

  # Application Instance 1
  app1:
    image: exploration-app
    environment:
      - PORT=3000
      - SERVER_ID=server-1
    networks:
      - exploration-network
    restart: unless-stopped

  # Application Instance 2
  app2:
    image: exploration-app
    environment:
      - PORT=3000
      - SERVER_ID=server-2
    networks:
      - exploration-network
    restart: unless-stopped

  # Test Container
  tester:
    image: exploration-tester
    depends_on:
      - load-balancer
    networks:
      - exploration-network
    profiles:
      - testing

networks:
  exploration-network:
    driver: bridge